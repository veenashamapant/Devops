trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnection: 'github.com_veenashamapant'
  
  # Web app name
  webAppName: 'your-web-app-name'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
      displayName: 'Use Python 3.8'
    
    - script: |
        python -m pip install --upgrade pip
        pip install pytest
      displayName: 'Install dependencies'
    
    - script: |
        echo "def factorial(n):
            if n < 0:
                raise ValueError('Factorial is not defined for negative numbers')
            if n == 0 or n == 1:
                return 1
            else:
                return n * factorial(n - 1)
        " > factorial.py
      displayName: 'Create factorial.py'
    
    - script: |
        echo "import pytest
        from factorial import factorial

        def test_factorial():
            assert factorial(0) == 1
            assert factorial(1) == 1
            assert factorial(5) == 120
            assert factorial(10) == 3628800
        
        def test_negative_input():
            with pytest.raises(ValueError):
                factorial(-1)
        " > test_factorial.py
      displayName: 'Create test_factorial.py'
    
    - script: |
        pytest test_factorial.py
      displayName: 'Run tests'
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: $(webAppName)'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
